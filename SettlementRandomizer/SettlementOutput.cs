//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SettlementRandomizer {
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using NPCRandomizer;
    using System;
    
    
    public partial class SettlementOutput : SettlementOutputBase {
        
        public virtual string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 8 ""
            this.Write("<!DOCTYPE html>\n<html>\n    <head>\n        <title>Random Settlement</title>\n      " +
                    "  <link href=\"settlement.css\" rel=\"stylesheet\">\n    </head>\n    <body>\n        <" +
                    "div class=\"container transparent\">\n            <h1>");
            
            #line default
            #line hidden
            
            #line 16 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( Settle.Name ));
            
            #line default
            #line hidden
            
            #line 16 ""
            this.Write("</h1>\n            <p class=\"general\">Size: ");
            
            #line default
            #line hidden
            
            #line 17 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( Settle.Size ));
            
            #line default
            #line hidden
            
            #line 17 ""
            this.Write("</p>\n            <p class=\"general\">Role: ");
            
            #line default
            #line hidden
            
            #line 18 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( Settle.Role ));
            
            #line default
            #line hidden
            
            #line 18 ""
            this.Write("</p>\n            <p class=\"general\">Population: ");
            
            #line default
            #line hidden
            
            #line 19 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( Settle.Population ));
            
            #line default
            #line hidden
            
            #line 19 ""
            this.Write("</p>\n            <p class=\"general\">Oblast: ");
            
            #line default
            #line hidden
            
            #line 20 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( Settle.NearestCity ));
            
            #line default
            #line hidden
            
            #line 20 ""
            this.Write("</p>\n            <div class=\"lg-block\">\n                <h2>Demographics</h2>\n   " +
                    "             <ul>\n                    ");
            
            #line default
            #line hidden
            
            #line 24 ""
 foreach (KeyValuePair<string, int> kvp in Settle.Demographics) { 
            
            #line default
            #line hidden
            
            #line 25 ""
            this.Write("                        <li>");
            
            #line default
            #line hidden
            
            #line 25 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( kvp.Key ));
            
            #line default
            #line hidden
            
            #line 25 ""
            this.Write(": ");
            
            #line default
            #line hidden
            
            #line 25 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( kvp.Value ));
            
            #line default
            #line hidden
            
            #line 25 ""
            this.Write("</li>\n                    ");
            
            #line default
            #line hidden
            
            #line 26 ""
 } 
            
            #line default
            #line hidden
            
            #line 27 ""
            this.Write("                </ul>\n            </div>\n            <div class=\"lg-block\">\n     " +
                    "           <h2>Tech Levels</h2>\n                <ul>\n                    ");
            
            #line default
            #line hidden
            
            #line 32 ""
 foreach (KeyValuePair<string, int> kvp in Settle.TechLevels) { 
            
            #line default
            #line hidden
            
            #line 33 ""
            this.Write("                        <li>");
            
            #line default
            #line hidden
            
            #line 33 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( kvp.Key ));
            
            #line default
            #line hidden
            
            #line 33 ""
            this.Write(": ");
            
            #line default
            #line hidden
            
            #line 33 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( kvp.Value ));
            
            #line default
            #line hidden
            
            #line 33 ""
            this.Write("</li>\n                    ");
            
            #line default
            #line hidden
            
            #line 34 ""
 } 
            
            #line default
            #line hidden
            
            #line 35 ""
            this.Write("                </ul>\n            </div>\n            <!-- list of NPC tables -->\n" +
                    "            ");
            
            #line default
            #line hidden
            
            #line 38 ""
 foreach (PersonData npc in Settle.NPCs) { 
            
            #line default
            #line hidden
            
            #line 39 ""
            this.Write("                <div class=\"block\">\n                        <div class=\"row\"><b>");
            
            #line default
            #line hidden
            
            #line 40 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( npc.Name ));
            
            #line default
            #line hidden
            
            #line 40 ""
            this.Write("</b></div>\n                        <div class=\"row\">");
            
            #line default
            #line hidden
            
            #line 41 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( npc.Age ));
            
            #line default
            #line hidden
            
            #line 41 ""
            this.Write(" ");
            
            #line default
            #line hidden
            
            #line 41 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( npc.Gender ));
            
            #line default
            #line hidden
            
            #line 41 ""
            this.Write(" ");
            
            #line default
            #line hidden
            
            #line 41 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( npc.Race ));
            
            #line default
            #line hidden
            
            #line 41 ""
            this.Write(" ");
            
            #line default
            #line hidden
            
            #line 41 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( npc.Subrace != ""? "(" + npc.Subrace + ")" : "" ));
            
            #line default
            #line hidden
            
            #line 41 ""
            this.Write(" </div>\n                        <div class=\"row\">Religiosity: ");
            
            #line default
            #line hidden
            
            #line 42 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( npc.Religion ));
            
            #line default
            #line hidden
            
            #line 42 ""
            this.Write("</div>\n                        <div class=\"row\">Profession: ");
            
            #line default
            #line hidden
            
            #line 43 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( npc.Profession ));
            
            #line default
            #line hidden
            
            #line 43 ""
            this.Write("</div>\n                        <div>Personality: ");
            
            #line default
            #line hidden
            
            #line 44 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( npc.Personality ));
            
            #line default
            #line hidden
            
            #line 44 ""
            this.Write("</div>\n                   \n                </div>\n            ");
            
            #line default
            #line hidden
            
            #line 47 ""
 } 
            
            #line default
            #line hidden
            
            #line 48 ""
            this.Write("            <div class=\"items\">\n                <h2>Weapons</h2>\n                " +
                    "<ul>\n                    ");
            
            #line default
            #line hidden
            
            #line 51 ""
 foreach (string item in Settle.AvailableItems["Crafting:Weapons"]) { 
            
            #line default
            #line hidden
            
            #line 52 ""
            this.Write("                        <li>");
            
            #line default
            #line hidden
            
            #line 52 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( item ));
            
            #line default
            #line hidden
            
            #line 52 ""
            this.Write("</li>\n                    ");
            
            #line default
            #line hidden
            
            #line 53 ""
 } 
            
            #line default
            #line hidden
            
            #line 54 ""
            this.Write("                </ul>\n                <h2>Armor</h2>\n                <ul>\n       " +
                    "                 ");
            
            #line default
            #line hidden
            
            #line 57 ""
 foreach (string item in Settle.AvailableItems["Crafting:Armor"]) { 
            
            #line default
            #line hidden
            
            #line 58 ""
            this.Write("                            <li>");
            
            #line default
            #line hidden
            
            #line 58 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( item ));
            
            #line default
            #line hidden
            
            #line 58 ""
            this.Write("</li>\n                        ");
            
            #line default
            #line hidden
            
            #line 59 ""
 } 
            
            #line default
            #line hidden
            
            #line 60 ""
            this.Write("                </ul>\n                <h2>Ornamental</h2>\n                <ul>\n  " +
                    "                      ");
            
            #line default
            #line hidden
            
            #line 63 ""
 foreach (string item in Settle.AvailableItems["Crafting:Ornamental"]) { 
            
            #line default
            #line hidden
            
            #line 64 ""
            this.Write("                            <li>");
            
            #line default
            #line hidden
            
            #line 64 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( item ));
            
            #line default
            #line hidden
            
            #line 64 ""
            this.Write("</li>\n                        ");
            
            #line default
            #line hidden
            
            #line 65 ""
 } 
            
            #line default
            #line hidden
            
            #line 66 ""
            this.Write("                </ul>\n            </div>\n            <div class=\"items\">\n        " +
                    "        <h2>Arcane Spells</h2>\n                <ul>\n                        ");
            
            #line default
            #line hidden
            
            #line 71 ""
 foreach (string item in Settle.AvailableItems["Arcane:Spells"]) { 
            
            #line default
            #line hidden
            
            #line 72 ""
            this.Write("                            <li>");
            
            #line default
            #line hidden
            
            #line 72 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( item ));
            
            #line default
            #line hidden
            
            #line 72 ""
            this.Write("</li>\n                        ");
            
            #line default
            #line hidden
            
            #line 73 ""
 } 
            
            #line default
            #line hidden
            
            #line 74 ""
            this.Write("                </ul>\n                <h2>Enchanting</h2>\n                <ul>\n  " +
                    "                      ");
            
            #line default
            #line hidden
            
            #line 77 ""
 foreach (string item in Settle.AvailableItems["Arcane:Enchanting"]) { 
            
            #line default
            #line hidden
            
            #line 78 ""
            this.Write("                            <li>");
            
            #line default
            #line hidden
            
            #line 78 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( item ));
            
            #line default
            #line hidden
            
            #line 78 ""
            this.Write("</li>\n                        ");
            
            #line default
            #line hidden
            
            #line 79 ""
 } 
            
            #line default
            #line hidden
            
            #line 80 ""
            this.Write("                </ul>\n            </div>\n            <div class=\"items\">\n        " +
                    "        <h2>Divine Spells</h2>\n                <ul>\n                        ");
            
            #line default
            #line hidden
            
            #line 85 ""
 foreach (string item in Settle.AvailableItems["Divine:Spells"]) { 
            
            #line default
            #line hidden
            
            #line 86 ""
            this.Write("                            <li>");
            
            #line default
            #line hidden
            
            #line 86 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( item ));
            
            #line default
            #line hidden
            
            #line 86 ""
            this.Write("</li>\n                        ");
            
            #line default
            #line hidden
            
            #line 87 ""
 } 
            
            #line default
            #line hidden
            
            #line 88 ""
            this.Write("                </ul>\n                <h2>Potions</h2>\n                <ul>\n     " +
                    "                   ");
            
            #line default
            #line hidden
            
            #line 91 ""
 foreach (string item in Settle.AvailableItems["Potions:All"]) { 
            
            #line default
            #line hidden
            
            #line 92 ""
            this.Write("                            <li>");
            
            #line default
            #line hidden
            
            #line 92 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( item ));
            
            #line default
            #line hidden
            
            #line 92 ""
            this.Write("</li>\n                        ");
            
            #line default
            #line hidden
            
            #line 93 ""
 } 
            
            #line default
            #line hidden
            
            #line 94 ""
            this.Write("                </ul>\n            </div>\n            <div class=\"items\">\n        " +
                    "        <h2>Lodging</h2>\n                <ul>\n                        ");
            
            #line default
            #line hidden
            
            #line 99 ""
 foreach (string item in Settle.AvailableItems["Lodging:All"]) { 
            
            #line default
            #line hidden
            
            #line 100 ""
            this.Write("                            <li>");
            
            #line default
            #line hidden
            
            #line 100 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( item ));
            
            #line default
            #line hidden
            
            #line 100 ""
            this.Write("</li>\n                        ");
            
            #line default
            #line hidden
            
            #line 101 ""
 } 
            
            #line default
            #line hidden
            
            #line 102 ""
            this.Write("                </ul>\n            </div>\n            <div class=\"items\">\n        " +
                    "        <h2>Specialty Items</h2>\n                <ul>\n                        ");
            
            #line default
            #line hidden
            
            #line 107 ""
 foreach (string item in Settle.AvailableItems["Items:Specialty"]) { 
            
            #line default
            #line hidden
            
            #line 108 ""
            this.Write("                            <li>");
            
            #line default
            #line hidden
            
            #line 108 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( item ));
            
            #line default
            #line hidden
            
            #line 108 ""
            this.Write("</li>\n                        ");
            
            #line default
            #line hidden
            
            #line 109 ""
 } 
            
            #line default
            #line hidden
            
            #line 110 ""
            this.Write("                </ul>\n            </div>\n            ");
            
            #line default
            #line hidden
            
            #line 112 ""
 if (ShowCommonItems) { 
            
            #line default
            #line hidden
            
            #line 113 ""
            this.Write("            <div class=\"items\">\n                <h2>Common Items</h2>\n           " +
                    "     <ul>\n                    \n                    ");
            
            #line default
            #line hidden
            
            #line 117 ""
 foreach (string item in Settle.AvailableItems["Items:General"]) { 
            
            #line default
            #line hidden
            
            #line 118 ""
            this.Write("                            <li>");
            
            #line default
            #line hidden
            
            #line 118 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( item ));
            
            #line default
            #line hidden
            
            #line 118 ""
            this.Write("</li>\n                    ");
            
            #line default
            #line hidden
            
            #line 119 ""
 } 
            
            #line default
            #line hidden
            
            #line 120 ""
            this.Write("                </ul>\n            </div>\n            ");
            
            #line default
            #line hidden
            
            #line 122 ""
 } 
            
            #line default
            #line hidden
            
            #line 123 ""
            this.Write("            \n        </div>\n    </body>\n</html>\n");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public virtual void Initialize() {
        }
    }
    
    public class SettlementOutputBase {
        
        private global::System.Text.StringBuilder builder;
        
        private global::System.Collections.Generic.IDictionary<string, object> session;
        
        private global::System.CodeDom.Compiler.CompilerErrorCollection errors;
        
        private string currentIndent = string.Empty;
        
        private global::System.Collections.Generic.Stack<int> indents;
        
        private ToStringInstanceHelper _toStringHelper = new ToStringInstanceHelper();
        
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session {
            get {
                return this.session;
            }
            set {
                this.session = value;
            }
        }
        
        public global::System.Text.StringBuilder GenerationEnvironment {
            get {
                if ((this.builder == null)) {
                    this.builder = new global::System.Text.StringBuilder();
                }
                return this.builder;
            }
            set {
                this.builder = value;
            }
        }
        
        protected global::System.CodeDom.Compiler.CompilerErrorCollection Errors {
            get {
                if ((this.errors == null)) {
                    this.errors = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errors;
            }
        }
        
        public string CurrentIndent {
            get {
                return this.currentIndent;
            }
        }
        
        private global::System.Collections.Generic.Stack<int> Indents {
            get {
                if ((this.indents == null)) {
                    this.indents = new global::System.Collections.Generic.Stack<int>();
                }
                return this.indents;
            }
        }
        
        public ToStringInstanceHelper ToStringHelper {
            get {
                return this._toStringHelper;
            }
        }
        
        public void Error(string message) {
            this.Errors.Add(new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message));
        }
        
        public void Warning(string message) {
            global::System.CodeDom.Compiler.CompilerError val = new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message);
            val.IsWarning = true;
            this.Errors.Add(val);
        }
        
        public string PopIndent() {
            if ((this.Indents.Count == 0)) {
                return string.Empty;
            }
            int lastPos = (this.currentIndent.Length - this.Indents.Pop());
            string last = this.currentIndent.Substring(lastPos);
            this.currentIndent = this.currentIndent.Substring(0, lastPos);
            return last;
        }
        
        public void PushIndent(string indent) {
            this.Indents.Push(indent.Length);
            this.currentIndent = (this.currentIndent + indent);
        }
        
        public void ClearIndent() {
            this.currentIndent = string.Empty;
            this.Indents.Clear();
        }
        
        public void Write(string textToAppend) {
            this.GenerationEnvironment.Append(textToAppend);
        }
        
        public void Write(string format, params object[] args) {
            this.GenerationEnvironment.AppendFormat(format, args);
        }
        
        public void WriteLine(string textToAppend) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendLine(textToAppend);
        }
        
        public void WriteLine(string format, params object[] args) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendFormat(format, args);
            this.GenerationEnvironment.AppendLine();
        }
        
        public class ToStringInstanceHelper {
            
            private global::System.IFormatProvider formatProvider = global::System.Globalization.CultureInfo.InvariantCulture;
            
            public global::System.IFormatProvider FormatProvider {
                get {
                    return this.formatProvider;
                }
                set {
                    if ((value != null)) {
                        this.formatProvider = value;
                    }
                }
            }
            
            public string ToStringWithCulture(object objectToConvert) {
                if ((objectToConvert == null)) {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                global::System.Type type = objectToConvert.GetType();
                global::System.Type iConvertibleType = typeof(global::System.IConvertible);
                if (iConvertibleType.IsAssignableFrom(type)) {
                    return ((global::System.IConvertible)(objectToConvert)).ToString(this.formatProvider);
                }
                global::System.Reflection.MethodInfo methInfo = type.GetMethod("ToString", new global::System.Type[] {
                            iConvertibleType});
                if ((methInfo != null)) {
                    return ((string)(methInfo.Invoke(objectToConvert, new object[] {
                                this.formatProvider})));
                }
                return objectToConvert.ToString();
            }
        }
    }
}
